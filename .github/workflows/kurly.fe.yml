name: Kurly Web App (PC) Deploy Workflow

on:
  push:
    branches: [ "test/actions-workflow" ]

env:
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner  }}

jobs:
  build:
    name: Build Docker Image Stage
    runs-on: ubuntu-latest

    steps:
      - name: Github Checkout
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2.4.1

      - name: Build and push Docker images
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/kurlyapp/web:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: SCP Command to Transfer Files
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml, default.conf"
          target: "~/app/nginx"

  deployment:
    name: Deploy Docker Image Stage
    runs-on: ubuntu-latest
    needs: build
    env:
      GITHUB_SHA: ${{ github.sha }}
      GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner  }}

    steps:
      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v0.1.8
        env:
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner  }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Connected with Actions!"
            echo $GITHUB_SHA
            echo ${{ env.GITHUB_SHA }}
            echo ${{ github.sha }}
            cd ./app/nginx
            mv default.conf ./conf.d

      - name: Deploy with Docker Compose
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: |
          sudo docker compose down
          sudo docker system prune -f -a
          sudo docker compose up -d
